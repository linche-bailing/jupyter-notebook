{"cells":[{"metadata":{"trusted":true},"cell_type":"code","source":"def fib(n):\n    a,b=0,1\n    while a<n:\n        print(a,end=' ')\n        a,b=b,a+b\n    print()##没有返回值\nfib(2000)##没有存储","execution_count":2,"outputs":[{"output_type":"stream","text":"0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 \n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"fib(0)","execution_count":3,"outputs":[{"output_type":"stream","text":"\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"print()","execution_count":4,"outputs":[{"output_type":"stream","text":"\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"print(print())","execution_count":5,"outputs":[{"output_type":"stream","text":"\nNone\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"print(fib(0))","execution_count":6,"outputs":[{"output_type":"stream","text":"\nNone\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def fib2(n):\n    result=[]\n    a,b=0,1\n    while a<n:\n        ,1##a是局部变量\n        result.append(a)\n        a,b=b,a+b\n    return result\nf=fib2##对函数名重新命名\na=f(100)#fib(100)\nprint(a)##不带参数的return是None","execution_count":14,"outputs":[{"output_type":"stream","text":"[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def ask_ok(prompt,retries=4,reminder='Please try again!'):\n    while True:\n        ok=input(prompt)\n        if ok in ('y','ye','yes'):\n            return True\n        if ok in ('n','no','nop','nope'):\n            return False\n        retries=retries-1\n        if retries<0:\n            raise ValueError(\"invalid user response\")\n        print(reminder)","execution_count":48,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"d={\"prompt\":\"yes\",\"retries\":1,\"reminder\":\"Happy\"}","execution_count":null,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"ask_ok(prompt='de',retries=2)","execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":"de2\nPlease try again!\nde1\nPlease try again!\nde234\n"},{"output_type":"error","ename":"ValueError","evalue":"invalid user response","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-28-8fca7f64a3b5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mask_ok\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprompt\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'de'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mretries\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-27-5266bbc8059d>\u001b[0m in \u001b[0;36mask_ok\u001b[0;34m(prompt, retries, reminder)\u001b[0m\n\u001b[1;32m      8\u001b[0m         \u001b[0mretries\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mretries\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mretries\u001b[0m\u001b[0;34m<\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"invalid user response\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreminder\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: invalid user response"]}]},{"metadata":{"trusted":true},"cell_type":"code","source":"ask_ok()##需要关键字","execution_count":29,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ask_ok() missing 1 required positional argument: 'prompt'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-29-8cdfdc39c5a5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mask_ok\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: ask_ok() missing 1 required positional argument: 'prompt'"]}]},{"metadata":{"trusted":true},"cell_type":"code","source":"ask_ok('yes',prompt='ok')##重复赋值","execution_count":30,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ask_ok() got multiple values for argument 'prompt'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-30-031be303f6ef>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mask_ok\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'yes'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mprompt\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'ok'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: ask_ok() got multiple values for argument 'prompt'"]}]},{"metadata":{"trusted":true},"cell_type":"code","source":"ask_ok(yi='l')##没有这个关键字","execution_count":32,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ask_ok() got an unexpected keyword argument 'yi'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-32-8171229a6cb4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mask_ok\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0myi\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'l'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;31m##没有这个关键字\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: ask_ok() got an unexpected keyword argument 'yi'"]}]},{"metadata":{"trusted":true},"cell_type":"code","source":"ask_ok(prompt='yes',1)##1无法判断，要么全写关键字，要么按顺序","execution_count":34,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"positional argument follows keyword argument (<ipython-input-34-7e7e10746ad7>, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-34-7e7e10746ad7>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    ask_ok(prompt='yes',1)##1无法判断，要么全写关键字，要么按顺序\u001b[0m\n\u001b[0m                       ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m positional argument follows keyword argument\n"]}]},{"metadata":{"trusted":true},"cell_type":"code","source":"ask_ok(\"Are you Happy\")##有两个是有默认值","execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":"Are you Happyn\n"},{"output_type":"execute_result","execution_count":17,"data":{"text/plain":"False"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"i=5\n\ndef f(arg=i):##在这里取值，之后会存储\n    print(arg)\n\ni=6\nf()","execution_count":20,"outputs":[{"output_type":"stream","text":"5\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def f(a,L=[]):##只有在调用函数的第一次进行取值，后续使用不再清空\n    L.append(a)\n    return L\n\nprint(f(1))\nprint(f(2))\nprint(f(4))","execution_count":22,"outputs":[{"output_type":"stream","text":"[1]\n[1, 2]\n[1, 2, 4]\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def f(a,L=None):\n    if L is None:\n        L=[]\n    L.append(a)\n    return L","execution_count":23,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"f(1)","execution_count":24,"outputs":[{"output_type":"execute_result","execution_count":24,"data":{"text/plain":"[1]"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"f(2)","execution_count":25,"outputs":[{"output_type":"execute_result","execution_count":25,"data":{"text/plain":"[2]"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"f(3)","execution_count":26,"outputs":[{"output_type":"execute_result","execution_count":26,"data":{"text/plain":"[3]"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"##当存在一个形式为**name，函数会接收一个字典,*name必须在**name前面\ndef cheeseshop(kind,*arguments,**keywords):##这里agruments可以储存多个值\n    print(\"--do you have any \",kind)\n    for arg in arguments:\n        print(arg)\n    for kw in keywords:\n        print(kw,\":\",keywords[kw])","execution_count":44,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"d={kind:\"apple\",*arguments:[\"yes\",\"no\"],**keywords:{is1:1,is2:2}}","execution_count":47,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-47-8d7acf58cafd>, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-47-8d7acf58cafd>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    d={kind:\"apple\",*arguments:[\"yes\",\"no\"],**keywords:{is1:1,is2:2}}\u001b[0m\n\u001b[0m                    ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"metadata":{"trusted":true},"cell_type":"code","source":"cheeseshop(\"apple\",\"yes\",\"no\",is1=1,is2=2,is3=3)","execution_count":38,"outputs":[{"output_type":"stream","text":"--do you have any  apple\nyes\nno\nis1 : 1\nis2 : 2\nis3 : 3\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"def chess(*arguments,a=\"/\"):\n    for arg in arguments:\n        print(arg.join(a))","execution_count":40,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"chess(\"apple\",\"banana\")","execution_count":41,"outputs":[{"output_type":"stream","text":"/\n/\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"list(range([3,6]))","execution_count":42,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"'list' object cannot be interpreted as an integer","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-42-37301b200c34>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'list' object cannot be interpreted as an integer"]}]},{"metadata":{"trusted":true},"cell_type":"code","source":"args=[3,6]\nlist(range(*args))","execution_count":43,"outputs":[{"output_type":"execute_result","execution_count":43,"data":{"text/plain":"[3, 4, 5]"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.7.8","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat":4,"nbformat_minor":4}